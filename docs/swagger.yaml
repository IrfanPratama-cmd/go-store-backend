basePath: /api/v1/user
definitions:
  lib.Response:
    properties:
      message:
        description: response message
        type: string
      status:
        description: http status
        type: integer
    type: object
  model.LoginAPI:
    properties:
      password:
        example: '@Password123'
        type: string
      remember:
        example: true
        type: boolean
      username:
        example: john.doe@mail.com
        type: string
    required:
    - password
    - username
    type: object
  model.RegistrationAPI:
    properties:
      confirm_password:
        example: '@Password123'
        type: string
      email:
        example: john.doe@mail.com
        type: string
      fullname:
        example: John doe
        type: string
      password:
        example: '@Password123'
        minLength: 8
        type: string
      referral_code:
        example: E6So5no5
        type: string
    required:
    - confirm_password
    - email
    - fullname
    - password
    type: object
  model.SendVerificationAccountAPI:
    properties:
      email:
        example: john.doe@mail.com
        type: string
    required:
    - email
    type: object
  model.UserAPI:
    properties:
      activated_at:
        format: date-time
        type: string
      asset_id:
        type: string
      business_id:
        type: string
      email:
        type: string
      employee_id:
        type: string
      fullname:
        type: string
      group_id:
        type: string
      is_activated:
        type: boolean
      is_owner:
        type: boolean
      is_password_system_generated:
        type: boolean
      last_login:
        format: date-time
        type: string
      mobile:
        type: string
      otp_enabled:
        type: boolean
      otp_expiration:
        format: date-time
        type: string
      password_expiration:
        format: date-time
        type: string
      password_last_change:
        format: date-time
        type: string
      reset_password_expiration:
        format: date-time
        type: string
      username:
        type: string
      verification_expiration:
        format: date-time
        type: string
    type: object
  model.VerificationAccountAPI:
    properties:
      email:
        example: john.doe@mail.com
        type: string
      verification_code:
        example: "7085"
        type: string
    required:
    - email
    - verification_code
    type: object
host: apiumkm.kitadigi.com
info:
  contact:
    email: dikhi@tog.co.id
    name: Dikhi Martin
  description: API Documentation
  termsOfService: https://dospecs.monstercode.net/en/guide/tnc.html
  title: User Services
  version: 1.0.0
paths:
  /:
    get:
      consumes:
      - application/json
      description: show basic response
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show basic response
      tags:
      - API
  /account/login:
    post:
      description: Generate token
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.LoginAPI'
      responses:
        "200":
          description: Logedin
          schema:
            $ref: '#/definitions/model.LoginAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Generate token
      tags:
      - Account
  /account/register:
    post:
      description: Registration
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RegistrationAPI'
      responses:
        "200":
          description: registered
          schema:
            $ref: '#/definitions/lib.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Registration
      tags:
      - Account
  /account/send-verify-account-code:
    post:
      description: Resend Code Verify account
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SendVerificationAccountAPI'
      responses:
        "200":
          description: Account verified
          schema:
            $ref: '#/definitions/model.UserAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Resend Code Verify account
      tags:
      - Account
  /account/verify-account:
    post:
      description: Verify account
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.VerificationAccountAPI'
      responses:
        "200":
          description: Account verified
          schema:
            $ref: '#/definitions/model.UserAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Verify account
      tags:
      - Account
  /info.json:
    get:
      consumes:
      - application/json
      description: show info response
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show info response
      tags:
      - API
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  TokenKey:
    in: header
    name: x-Token
    type: apiKey
swagger: "2.0"
