// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://dospecs.monstercode.net/en/guide/tnc.html",
        "contact": {
            "name": "Dikhi Martin",
            "email": "dikhi@tog.co.id"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "show basic response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show basic response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/account/login": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Generate token",
                "tags": [
                    "Account"
                ],
                "summary": "Generate token",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logedin",
                        "schema": {
                            "$ref": "#/definitions/model.LoginAPI"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Registration",
                "tags": [
                    "Account"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "registered",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/account/send-verify-account-code": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Resend Code Verify account",
                "tags": [
                    "Account"
                ],
                "summary": "Resend Code Verify account",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SendVerificationAccountAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account verified",
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/account/verify-account": {
            "post": {
                "security": [
                    {
                        "TokenKey": []
                    }
                ],
                "description": "Verify account",
                "tags": [
                    "Account"
                ],
                "summary": "Verify account",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VerificationAccountAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account verified",
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/info.json": {
            "get": {
                "description": "show info response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show info response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "response message",
                    "type": "string"
                },
                "status": {
                    "description": "http status",
                    "type": "integer"
                }
            }
        },
        "model.LoginAPI": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "@Password123"
                },
                "remember": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "example": "john.doe@mail.com"
                }
            }
        },
        "model.RegistrationAPI": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "fullname",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "@Password123"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@mail.com"
                },
                "fullname": {
                    "type": "string",
                    "example": "John doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "@Password123"
                },
                "referral_code": {
                    "type": "string",
                    "example": "E6So5no5"
                }
            }
        },
        "model.SendVerificationAccountAPI": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@mail.com"
                }
            }
        },
        "model.UserAPI": {
            "type": "object",
            "properties": {
                "activated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "asset_id": {
                    "type": "string"
                },
                "business_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "is_activated": {
                    "type": "boolean"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "is_password_system_generated": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string",
                    "format": "date-time"
                },
                "mobile": {
                    "type": "string"
                },
                "otp_enabled": {
                    "type": "boolean"
                },
                "otp_expiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "password_expiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "password_last_change": {
                    "type": "string",
                    "format": "date-time"
                },
                "reset_password_expiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                },
                "verification_expiration": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.VerificationAccountAPI": {
            "type": "object",
            "required": [
                "email",
                "verification_code"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@mail.com"
                },
                "verification_code": {
                    "type": "string",
                    "example": "7085"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "TokenKey": {
            "type": "apiKey",
            "name": "x-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "apiumkm.kitadigi.com",
	BasePath:         "/api/v1/user",
	Schemes:          []string{"https"},
	Title:            "User Services",
	Description:      "API Documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
